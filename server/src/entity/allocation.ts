import {
  Column,
  Entity,
  JoinColumn,
  ManyToOne,
  PrimaryColumn,
  PrimaryGeneratedColumn,
} from "typeorm";
import { Activity } from "./Activity";
import { Staff } from "./Staff";
import { Unit } from "./Unit";

@Entity()
export class Allocation {
  @ManyToOne(() => Staff, (staff) => staff.allocations, { primary: true })
  // @JoinColumn({ name: "staff_id", referencedColumnName: "id" })
  staff!: Staff;

  @ManyToOne(() => Activity, (activity) => activity.allocations, {
    primary: true,
  })
  // @JoinColumn([
  //   { name: "activityCode", referencedColumnName: "activityCode" },
  //   { name: "offeringPeriod", referencedColumnName: "offeringPeriod" },
  //   { name: "unitCode", referencedColumnName: "unitCode" },
  //   { name: "unitId", referencedColumnName: "unitId" },
  //   { name: "unitOfferingPeriod", referencedColumnName: "unitOfferingPeriod" }
  // ])
  activity!: Activity;

  //TODO: should we have a autogenerated primary key here?

  // @PrimaryColumn({
  //   type: "varchar",
  //   length: 7,
  // })
  // unitCode!: string;

  // @PrimaryColumn({
  //   type: "varchar",
  // })
  // offeringPeriod!: string;

  @Column({ type: "varchar" })
  activityGroup!: string;

  @Column({
    type: "varchar",
    length: 2,
  })
  campus!: string;

  @Column({ type: "varchar" })
  location!: string;

  @Column({ type: "int" })
  duration!: number;

  @Column({
    type: "varchar",
    length: 3,
  })
  dayOfWeek!: number;

  @Column({ type: "time" })
  startTime!: Date;
}
